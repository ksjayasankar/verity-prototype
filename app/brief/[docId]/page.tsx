'use client';
import { useEffect, useState } from 'react';
import { useParams, useRouter } from 'next/navigation';
import Link from 'next/link';
import { useStore } from '../../../store/useStore';
import { Draft, ChainEvent } from '../../../lib/types';
import ProgressChips from '../../../components/ui/ProgressChips';
import EvidenceChip from '../../../components/ui/EvidenceChip';
import LangToggle from '../../../components/ui/LangToggle';
import CommitmentBadge from '../../../components/ui/CommitmentBadge';
import { Info, Loader2, MessageSquareWarning, RefreshCw } from 'lucide-react';
import * as Tooltip from '@radix-ui/react-tooltip';

export default function BriefPage() {
  const router = useRouter();
  const { docId } = useParams();
  const { getDraft, getEventsForDoc, isInitialized, settings } = useStore();

  const [draft, setDraft] = useState<Draft | null>(null);
  const [event, setEvent] = useState<ChainEvent | null>(null);
  const [lang, setLang] = useState<'en' | 'local'>('en');

  useEffect(() => {
    if (isInitialized) {
      const foundDraft = getDraft(docId as string);
      const events = getEventsForDoc(docId as string);
      setDraft(foundDraft || null);
      setEvent(events.find(e => e.docId === docId) || null);
    }
  }, [docId, getDraft, getEventsForDoc, isInitialized]);

  if (!isInitialized || !draft) {
    return <div className="flex justify-center items-center h-64"><Loader2 className="animate-spin text-primary" size={32} /></div>;
  }

  const bullets = lang === 'en' ? draft.bullets_en : draft.bullets_local;
  
  const handleReportMismatch = () => {
    toast.success("Thank you for your report. We will investigate the issue.");
  };

  return (
    <Tooltip.Provider>
      <ProgressChips />
      <div className="max-w-4xl mx-auto mt-8">
        <header className="mb-8">
          <h1 className="text-4xl font-bold">{draft.company}</h1>
          <p className="text-xl text-text-secondary">{draft.title}</p>
          <div className="flex justify-between items-center mt-4">
            <p className="text-sm text-text-secondary">Filing Date: {draft.filing_date}</p>
            <LangToggle lang={lang} setLang={setLang} />
          </div>
        </header>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {/* Main Content */}
          <main className="md:col-span-2">
            <ul className="space-y-4">
              {bullets.map((bullet, index) => (
                <li key={index} className="flex items-start text-lg">
                  <span className="text-primary mr-3 mt-1.5">â€¢</span>
                  <p className="flex-grow">
                    {bullet}
                    {lang === 'en' && draft.facts.evidence['director_name'] && <EvidenceChip page={draft.facts.evidence['director_name'].page} quote={draft.facts.evidence['director_name'].quote} />}
                  </p>
                </li>
              ))}
            </ul>
          </main>

          {/* Sidebar */}
          <aside>
            <div className="sticky top-24 space-y-4">
              {event && <CommitmentBadge commitment={event.commitment} txHash={event.txHash} />}
              <Link
                href={`/verify/${docId}`}
                className="w-full flex items-center justify-center gap-2 rounded-md bg-primary px-3 py-3 text-base font-semibold text-white hover:bg-primary-hover transition-colors"
              >
                Verify Brief
              </Link>
              <div className="flex gap-2">
                <button 
                  onClick={handleReportMismatch}
                  className="w-full text-center text-xs text-text-secondary hover:text-text-primary transition-colors flex items-center justify-center gap-1">
                  <MessageSquareWarning size={14} /> Report Mismatch
                </button>
                <Link 
                  href={`/versions/${docId.toString().replace(/-V\d+$/, '')}`}
                  className="w-full text-center text-xs text-text-secondary hover:text-text-primary transition-colors flex items-center justify-center gap-1">
                  <RefreshCw size={14} /> View Versions
                </Link>
              </div>
            </div>
          </aside>
        </div>

        <footer className="mt-16 pt-4 border-t border-slate-700">
          <div className="flex items-center justify-center gap-2 text-sm text-text-secondary">
            <span>{settings.disclosureText}</span>
            <Tooltip.Root>
              <Tooltip.Trigger>
                <Info size={16} className="cursor-pointer" />
              </Tooltip.Trigger>
              <Tooltip.Portal>
                <Tooltip.Content sideOffset={5} className="z-50 max-w-xs rounded-lg bg-slate-800 p-3 text-xs text-text-secondary shadow-lg">
                  This brief was generated by an AI model ({settings.modelName}) and approved by a human. Its integrity is secured by a commitment on the {settings.network} blockchain.
                  <Tooltip.Arrow className="fill-slate-800" />
                </Tooltip.Content>
              </Tooltip.Portal>
            </Tooltip.Root>
          </div>
        </footer>
      </div>
    </Tooltip.Provider>
  );
}